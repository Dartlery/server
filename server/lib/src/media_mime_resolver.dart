import 'package:logging/logging.dart';
import 'package:mime/mime.dart';
import 'package:mime/mime.dart' as mime;
import "package:hex/hex.dart";

class MediaMimeResolver extends MimeTypeResolver{
  static final Logger _log = new Logger('MediaMimeResolver');

  MediaMimeResolver(): super() {
    //addMagicNumber([0x1A, 0x45, 0xDF, 0xA3, 0x93, 0x42, 0x82, 0x88,
      //              0x6D, 0x61, 0x74, 0x72, 0x6F, 0x73, 0x6B, 0x61], 'video/x-matroska');

    addMagicNumber([0x1A, 0x45, 0xDF, 0xA3], 'video/webm');


    addMagicNumber([0x00, 0x00, 0x00, 0x18, 0x66, 0x74, 0x79, 0x70, 0x6D, 0x70, 0x34], 'video/mp4',
              mask: [0x00,0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);

    addMagicNumber([0x00, 0x00, 0x00, 0x14, 0x66, 0x74, 0x79, 0x70, 0x69, 0x73, 0x6F, 0x6D], 'video/mp4',
             mask: [0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);

    addMagicNumber([0x00, 0x00, 0x00, 0x14, 0x66, 0x74, 0x79, 0x70, 0x4D, 0x53, 0x4E, 0x56], 'video/mp4',
             mask: [0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);

    addMagicNumber([0x00, 0x00, 0x00, 0x18, 0x66, 0x74, 0x79, 0x70, 0x33, 0x67, 0x70, 0x35]
                  , 'video/mp4',
        mask: [0x00,0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);

    addMagicNumber([0x00, 0x00, 0x00, 0x1C, 0x66, 0x74, 0x79, 0x70,
                    0x4D, 0x53, 0x4E, 0x56, 0x01, 0x29, 0x00, 0x46,
                    0x4D, 0x53, 0x4E, 0x56, 0x6D, 0x70, 0x34, 0x32
    ], 'video/mp4');

    addMagicNumber([0x00, 0x00, 0x00, 0x00, 0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20]
        , 'video/quicktime',
            mask: [0x00,0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);

    addMagicNumber([0x43, 0x57, 0x53], 'application/x-shockwave-flash');
    addMagicNumber([0x46, 0x4C, 0x56, 0x01], 'video/x-flv');

    addMagicNumber([0x52, 0x49, 0x46, 0x46, 0x00, 0x00, 0x00, 0x00,
                    0x41, 0x56, 0x49, 0x20, 0x4C, 0x49, 0x53, 0x54]
        , 'video/avi',
              mask: [0xFF,0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
                      0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF]);

    addMagicNumber([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11,
    0xA6, 0xD9, 0x00, 0xAA, 0x00, 0x62, 0xCE, 0x6C
    ], 'video/x-ms-asf');

    addMagicNumber([0x00, 0x00, 0x01, 0xB0
    ], 'video/mpeg',
    mask: [0xFF, 0xFF, 0xFF, 0xF0]);
  }

  String getMimeType(List<int> data) {
    List<int> lookupBytes;
    if (data.length > magicNumbersMaxLength) {
      lookupBytes = data.sublist(0, magicNumbersMaxLength);
    } else {
      lookupBytes = data;
    }

    _log.info(HEX.encode(lookupBytes));

    return  lookup("", headerBytes: lookupBytes);
  }
}